{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/savvy/PersonalProjects/uber/screens/Home.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useEffect, useState } from 'react';\nimport HeaderTabs from \"../components/home/HeaderTabs\";\nimport SearchBar from \"../components/home/SearchBar\";\nimport Categories from \"../components/home/Categories\";\nimport RestaurantItems from \"../components/home/RestaurantItems\";\nimport { localRestaurants } from \"../DummyData/localRestaurants\";\nimport BottomTabs from \"../components/home/BottomTabs\";\nimport { Divider } from 'react-native-elements';\nvar YELP_API_KEY = 'Iiz3wiE8aYhgEnr0lT-oOoRqAEBJFm_F6IMAD4_rmvaMCGLv4C94ADoFauoelVy1iPFHG0rLON3pLbpzB6eGbNTPvhAz1aAWPN2YlJGQ7nvsNn4IlYY_suw-9Eb1YnYx';\nvar config = {\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    'x- requested - wth': 'XMLHttpRequest',\n    'Access-Control-Allow-Origin': '*',\n    Authorization: \"Bearer \" + YELP_API_KEY\n  },\n  params: {\n    term: 'restaurants',\n    location: 'new york, ny',\n    radius: 1000,\n    sort_by: 'relevance',\n    limit: 10\n  }\n};\nexport default function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(localRestaurants),\n      _useState2 = _slicedToArray(_useState, 2),\n      restaurantData = _useState2[0],\n      setRestaurantData = _useState2[1];\n\n  var _useState3 = useState('NYC'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      city = _useState4[0],\n      setCity = _useState4[1];\n\n  var _useState5 = useState('Delivery'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      activeTab = _useState6[0],\n      setActiveTab = _useState6[1];\n\n  var getRestaurantsFromYelp = function getRestaurantsFromYelp() {\n    var yelpUrl, apiOptions, response, _await$response$json, businesses;\n\n    return _regeneratorRuntime.async(function getRestaurantsFromYelp$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            yelpUrl = \"https://api.yelp.com/v3/businesses/search?term=restaurants&location=\" + city;\n            apiOptions = {\n              method: 'GET',\n              mode: 'no-cors',\n              headers: {\n                Accept: 'application/json',\n                'Access-Control-Allow-Origin': '*',\n                Authorization: \"Bearer \" + YELP_API_KEY\n              }\n            };\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(yelpUrl, apiOptions));\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            _await$response$json = _context.sent;\n            businesses = _await$response$json.businesses;\n            setRestaurantData(businesses.filter(function (restaurant) {\n              return restaurant.transactions.includes(activeTab.toLowerCase());\n            }));\n            console.log(setRestaurantData(businesses));\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getRestaurantsFromYelp();\n  }, [city, activeTab]);\n  return React.createElement(SafeAreaView, {\n    style: {\n      backgroundColor: '#eee',\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      padding: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, React.createElement(HeaderTabs, {\n    activeTab: activeTab,\n    setActiveTab: setActiveTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), React.createElement(SearchBar, {\n    cityHandler: setCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })), React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, React.createElement(Categories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), React.createElement(RestaurantItems, {\n    restaurantData: restaurantData,\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })), React.createElement(Divider, {\n    width: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTabs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","useEffect","useState","HeaderTabs","SearchBar","Categories","RestaurantItems","localRestaurants","BottomTabs","Divider","YELP_API_KEY","config","headers","Accept","Authorization","params","term","location","radius","sort_by","limit","Home","navigation","restaurantData","setRestaurantData","city","setCity","activeTab","setActiveTab","getRestaurantsFromYelp","yelpUrl","apiOptions","method","mode","fetch","response","json","businesses","filter","restaurant","transactions","includes","toLowerCase","console","log","backgroundColor","flex","padding"],"sources":["/Users/savvy/PersonalProjects/uber/screens/Home.js"],"sourcesContent":["import { View, Text, SafeAreaView, ScrollView } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport HeaderTabs from '../components/home/HeaderTabs';\nimport SearchBar from '../components/home/SearchBar';\nimport Categories from '../components/home/Categories';\nimport RestaurantItems from '../components/home/RestaurantItems';\nimport { localRestaurants } from '../DummyData/localRestaurants';\nimport BottomTabs from '../components/home/BottomTabs';\n// import { localRestaurants } from '../components/RestaurantItems';\nimport { Divider } from 'react-native-elements';\nconst YELP_API_KEY =\n  'Iiz3wiE8aYhgEnr0lT-oOoRqAEBJFm_F6IMAD4_rmvaMCGLv4C94ADoFauoelVy1iPFHG0rLON3pLbpzB6eGbNTPvhAz1aAWPN2YlJGQ7nvsNn4IlYY_suw-9Eb1YnYx';\nconst config = {\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    'x- requested - wth': 'XMLHttpRequest',\n    'Access-Control-Allow-Origin': '*',\n    Authorization: `Bearer ${YELP_API_KEY}`,\n  },\n  params: {\n    term: 'restaurants',\n    location: 'new york, ny',\n    radius: 1000,\n    sort_by: 'relevance',\n    limit: 10,\n  },\n};\n\nexport default function Home({ navigation }) {\n  const [restaurantData, setRestaurantData] = useState(localRestaurants);\n  const [city, setCity] = useState('NYC');\n  const [activeTab, setActiveTab] = useState('Delivery');\n  // const auth = {\n  //   Authorization: `Bearer ${YELP_API_KEY}`,\n  // };\n\n  // const getRest = async () => {\n  //   const url = `https://api.yelp.com/v3/autocomplete?text=del&latitude=37.786882&longitude=-122.399972`;\n  //   try {\n  //     const { data } = await axios.get(url, { headers: auth });\n  //     console.log(data);\n  //   } catch (err) {\n  //     return { Error: err.stack };\n  //   }\n  // };\n\n  // getRest();\n  const getRestaurantsFromYelp = async () => {\n    const yelpUrl = `https://api.yelp.com/v3/businesses/search?term=restaurants&location=${city}`;\n    const apiOptions = {\n      method: 'GET',\n      mode: 'no-cors',\n      headers: {\n        Accept: 'application/json',\n        // 'Content-Type': 'application/json',\n        // 'x- requested - wth': 'XMLHttpRequest',\n        'Access-Control-Allow-Origin': '*',\n        Authorization: `Bearer ${YELP_API_KEY}`,\n      },\n    };\n    // return await fetch(yelpUrl, apiOptions)\n    //   .then((res) => res.json())\n    //   .then((json) => {\n    //     return setRestaurantData(json.businesses);\n    //   });\n    const response = await fetch(yelpUrl, apiOptions);\n    const { businesses } = await response.json();\n    setRestaurantData(\n      businesses.filter((restaurant) =>\n        restaurant.transactions.includes(activeTab.toLowerCase())\n      )\n    );\n    console.log(setRestaurantData(businesses));\n  };\n  useEffect(() => {\n    getRestaurantsFromYelp();\n  }, [city, activeTab]);\n\n  return (\n    <SafeAreaView style={{ backgroundColor: '#eee', flex: 1 }}>\n      <View style={{ backgroundColor: 'white', padding: 15 }}>\n        <HeaderTabs activeTab={activeTab} setActiveTab={setActiveTab} />\n        <SearchBar cityHandler={setCity} />\n      </View>\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <Categories />\n        <RestaurantItems\n          restaurantData={restaurantData}\n          navigation={navigation}\n        />\n      </ScrollView>\n      <Divider width={1} />\n      <BottomTabs />\n    </SafeAreaView>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}